<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog 
	  xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
	  xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" 
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd"
	  context="AUTHDEV">

    
    <!--
        catalogName="${POSTGRES_CATALOG}" schemaName="${POSTGRES_SCHEMA}" 
        baseTableCatalogName="${POSTGRES_CATALOG}" baseTableSchemaName="${POSTGRES_SCHEMA}" referencedTableCatalogName="${POSTGRES_CATALOG}" referencedTableSchemaName="${POSTGRES_SCHEMA}" 
    -->

    <changeSet author="Carol Geisler" id="tag0">
    	<tagDatabase tag="approleapiscope_data_dev_start"/>
    </changeSet>

    <!--  These AUTHDEV changesets were created to populate some preliminary 
          data into the auth tables to facilitate development and testing. -->

    <!-- App Role API Scope XRef Records -->
    
    <changeSet author="Carol Geisler" id="INS_aprlapsc_READ_WRITE_ALL_Default_Write">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
          <column name="app_role_api_scope_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_role_id" type="UUID" valueComputed="(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL')"/>
          <column name="api_scope_id" type="UUID" valueComputed="(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Write')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APRLAPSC_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
              <where>app_role_id=(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL') AND api_scope_id=(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Write')</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_aprlapsc_READ_WRITE_ALL_Default_Read_Only">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
          <column name="app_role_api_scope_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_role_id" type="UUID" valueComputed="(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL')"/>
          <column name="api_scope_id" type="UUID" valueComputed="(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Read_Only')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APRLAPSC_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
              <where>app_role_id=(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL') AND api_scope_id=(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Read_Only')</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_aprlapsc_READ_ALL_Default_Read_Only">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
          <column name="app_role_api_scope_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_role_id" type="UUID" valueComputed="(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_ALL')"/>
          <column name="api_scope_id" type="UUID" valueComputed="(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Read_Only')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APRLAPSC_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
              <where>app_role_id=(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_ALL') AND api_scope_id=(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Read_Only')</where>
          </delete>
      </rollback>
    </changeSet>
    

    <changeSet author="Carol Geisler" id="tag1">
    	<tagDatabase tag="approleapiscope_data_dev_end"/>
    </changeSet>

</databaseChangeLog>
