<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
    <changeSet author="Lucas Lopatka" id="">
        <comment></comment>
        <createTable catalogName="${POSTGRES_CATALOG}" schemaName="${POSTGRES_SCHEMA}" tableName="auth_role" remarks="">
            <column name="role_id" type="uuid">
                <constraints nullable="false"/>
            </column>
            <!-- Table Specific -->
            <column name="role_name" type="varchar(128)">
                <constraints nullable="false"/>
            </column>
            <column name="role_code" type="varchar(128)">
                <constraints nullable="false"/>
            </column>
            <column name="description" type="varchar(200)">
                <constraints nullable="true"/>
            </column>
            <column name="system_role_ind" type="int2">
                <constraints nullable="true"/>
            </column>
            <!-- Common, Meta -->
            <column name="created_by" type="varchar(100)">
                <constraints nullable="false"/>
            </column>
            <column name="updated_by" type="varchar(100)">
                <constraints nullable="false"/>
            </column>
            <column name="created_dtm" type="timestamptz">
                <constraints nullable="false"/>
            </column>
            <column name="updated_dtm" type="timestamptz">
                <constraints nullable="false"/>
            </column>
            <column name="revision_count" type="numeric(10)">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <addPrimaryKey catalogName="${POSTGRES_CATALOG}" schemaName="${POSTGRES_SCHEMA}" tableName="auth_role" columnNames="role_id" constraintName="pk"/>
        <!-- <addUniqueConstraint catalogName="${POSTGRES_CATALOG}" schemaName="${POSTGRES_SCHEMA}" tableName="auth_role" columnNames="" constraintName="uk"/> -->
        <sql>
        	GRANT SELECT, INSERT, UPDATE, DELETE ON  ${POSTGRES_SCHEMA}.auth_role to ${POSTGRES_APP_USER};
        </sql>
        <rollback>
          <dropTable catalogName="${POSTGRES_CATALOG}" schemaName="${POSTGRES_SCHEMA}" tableName="auth_role"/>
        </rollback>
    </changeSet>
    <changeSet author="Lucas Lopatka" id="stamp">
      <sql>
        BEGIN;
        	DROP TRIGGER IF EXISTS stamp ON ${POSTGRES_SCHEMA}.auth_role;
        	CREATE TRIGGER stamp BEFORE INSERT OR UPDATE ON ${POSTGRES_SCHEMA}.auth_role
	            FOR EACH ROW EXECUTE PROCEDURE ${POSTGRES_SCHEMA}.tab_stamp();
        COMMIT;
      </sql>
      <rollback>
        <sql>
          BEGIN;
          	DROP TRIGGER IF EXISTS stamp ON ${POSTGRES_SCHEMA}.auth_role;
          COMMIT;
        </sql>
      </rollback>
    </changeSet>
</databaseChangeLog>
